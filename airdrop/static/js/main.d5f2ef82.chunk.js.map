{"version":3,"sources":["components/header/partials/Logo.js","components/header/Header.js","connectors.ts","pages/ido/Ido.tsx","hooks.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["Logo","href","className","src","alt","React","Component","Header","id","type","data-toggle","data-target","target","rel","injected","InjectedConnector","supportedChainIds","WalletConnectConnector","rpc","56","bridge","qrcode","pollingInterval","busdAbi","idoAbi","IDO_ADDRESS","Ido","useWeb3React","account","provider","activate","error","library","useState","setSig","approved","setApproved","claimed","setClaimed","suppress","active","useEffect","ethereum","window","on","handleChainChanged","undefined","catch","console","handleAccountsChanged","accounts","length","removeListener","useInactiveListener","tried","setTried","isAuthorized","then","isMobile","useEagerConnect","a","busdContract","ethers","idoContract","Promise","all","axios","post","address","allowance","participated","results","sig","data","debug","toString","gte","from","getLibrary","Web3Provider","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d5f2ef82.chunk.js","sourcesContent":["import React from 'react';\n\nclass Logo extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<a href=\"/\" className=\"logo\">\n\t\t\t\t<img src=\"assets/svg/logo-icon.svg\" alt=\"logo\" />\n\t\t\t\t<span>DinoExchange</span>\n\t\t\t</a>\n\t\t);\n\t}\n}\n\nexport default Logo","import React from 'react';\nimport Logo from './partials/Logo';\n\nclass Header extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<header id=\"header\">\n\t\t\t\t<div className=\"container position-relative\">\n\t\t\t\t\t<div className=\"d-flex align-items-center justify-content-between\">\n\t\t\t\t\t\t<Logo/>\n\n\t\t\t\t\t\t<div className=\"header__button d-flex align-items-center\">\n\t\t\t\t\t\t\t<a href=\"https://app.dino.exchange\" className=\"btn-app\"><span>Enter App</span></a>\n\n\t\t\t\t\t\t\t<button type=\"button\" className=\"toggle-menu collapsed d-md-none\" data-toggle=\"collapse\" data-target=\"#menu\">\n\t\t\t\t\t\t\t\t<span></span>\n\t\t\t\t\t\t\t\t<span></span>\n\t\t\t\t\t\t\t\t<span></span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<nav id=\"menu\" className=\"collapse d-md-block\">\n\t\t\t\t\t\t<ul className=\"menu d-md-flex align-items-center\">\n\t\t\t\t\t\t\t<li><a href=\"https://docs.dino.exchange\" target=\"_blank\" rel=\"noopener noreferrer\">Docs</a></li>\n\t\t\t\t\t\t\t<li><a href=\"https://medium.com/@dinoexchange\" target=\"_blank\" rel=\"noopener noreferrer\">Medium</a></li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</nav>\n\t\t\t\t</div>\n\t\t\t</header>\n\t\t);\n\t}\n}\n\nexport default Header\n","import { InjectedConnector } from '@web3-react/injected-connector';\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector';\n\nconst RPC = {\n  56: 'https://bsc-dataseed.binance.org',\n  31337: 'http://localhost:8545',\n};\n\nexport const injected = new InjectedConnector({\n  supportedChainIds: [\n    56, // binance smart chain\n    31337, // local\n  ]\n});\n\nexport const walletconnect = new WalletConnectConnector({\n  rpc: {\n    56: RPC[56]\n  },\n  bridge: 'https://bridge.walletconnect.org',\n  qrcode: true,\n  pollingInterval: 15000\n});\n","import { JsonRpcSigner, Web3Provider } from '@ethersproject/providers';\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core'\nimport axios from 'axios';\nimport * as ethers from 'ethers';\nimport React, { useEffect, useState } from 'react';\nimport Countdown, { CountdownRendererFn } from 'react-countdown';\n\nimport Modal from '../../components/modal/Modal';\nimport { injected, walletconnect } from '../../connectors';\nimport { useEagerConnect, useInactiveListener } from '../../hooks';\n\nimport './ido.css';\n\n// import medium from './medium.png';\n// import telegram from './telegram.png';\n// import twitter from './twitter.png';\n\nconst pad2 = (n: number) => {\n  return n < 10 ? '0' + n : n.toString();\n};\n\nconst countdownRenderer: CountdownRendererFn = ({ hours, minutes, seconds, completed }) => {\n  if (completed) {\n    return null;\n  }\n\n  return <>{' '}(in {pad2(hours)}:{pad2(minutes)}:{pad2(seconds)})</>;\n};\n\nconst countdown2Renderer: CountdownRendererFn = ({ days, hours, minutes, seconds, completed }) => {\n  if (completed || days >= 1) {\n    return null;\n  }\n\n  return <>{' '}({pad2(hours)}:{pad2(minutes)}:{pad2(seconds)} left)</>;\n};\n\nconst getSigner = (library: Web3Provider, account: string): JsonRpcSigner => {\n  return library.getSigner(account).connectUnchecked()\n};\n\nconst getProviderOrSigner = (library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner => {\n  return account ? getSigner(library, account) : library\n};\n\nconst busdAbi = [\n  'function allowance(address owner, address spender) external view returns (uint256)',\n  'function approve(address spender, uint256 amount) external returns (bool)',\n];\n\nconst idoAbi = [\n  'function participated(address account) public view returns (bool)',\n  'function participate(bytes calldata sig) external',\n];\n\n// BSC Mainnet\nconst API_URL = 'https://ido-test.dino.exchange/check';\nconst BUSD_ADDRESS = '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56';\nconst IDO_ADDRESS = '0xdaC52838B1a9e5184Eca875B4791a42f98558F65';\n\n// Local\n// const API_URL = 'http://localhost:7799';\n// const BUSD_ADDRESS = '0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512';\n// const IDO_ADDRESS = '0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0';\n\nconst IDO_BUSD_PAYMENT = '250000000000000000000'; // 250 BUSD\n\nexport default function Ido() {\n  const { account, activate, error, library: provider } = useWeb3React<Web3Provider>();\n  const [modalOpen, setModalOpen] = useState(false);\n  const [sig, setSig] = useState<string | null>(null);\n  const [approved, setApproved] = useState<boolean | null>(null);\n  const [approving, setApproving] = useState(false);\n  const [claimed, setClaimed] = useState<boolean | null>(null);\n  const [claiming, setClaiming] = useState(false);\n\n  // try to eagerly connect to an injected provider, if it exists and has granted access already\n  const triedEager = useEagerConnect();\n\n  // when there's no account connected, react to logins (broadly speaking) on the injected provider, if it exists\n  useInactiveListener(!triedEager);\n\n  useEffect(() => {\n    if (account) {\n      (async () => {\n        const busdContract = new ethers.Contract(BUSD_ADDRESS, busdAbi, provider);\n        const idoContract = new ethers.Contract(IDO_ADDRESS, idoAbi, provider);\n\n        const results = await Promise.all([\n          axios.post(API_URL, { address: account }),\n          busdContract.allowance(account, IDO_ADDRESS),\n          idoContract.participated(account),\n        ]);\n\n        const sig: string = results[0].data.sig || '';\n        const allowance: ethers.BigNumber = results[1];\n        const participated: boolean = results[2];\n\n        console.debug('Sig', sig);\n        setSig(sig);\n\n        console.debug('BUSD allowance', allowance.toString());\n        setApproved(allowance.gte(ethers.BigNumber.from(IDO_BUSD_PAYMENT)));\n\n        console.debug('Participated', participated);\n        setClaimed(participated);\n      })();\n    }\n  }, [account]);\n\n  useEffect(() => {\n    if (approved && claimed === null) {\n      (async () => {\n        const idoContract = new ethers.Contract(IDO_ADDRESS, idoAbi, provider);\n        const participated: boolean = await idoContract.participated(account);\n        console.debug('Participated', participated);\n        setClaimed(participated);\n      })();\n    }\n  }, [approved, claimed]);\n\n  return (\n    <div className=\"Ido__ido h-full flex flex-col md:flex-row items-center justify-center p-5 md:px-14 text-white\">\n      <div className=\"Ido__hero flex flex-col\">\n        <div className=\"Ido__headline flex text-2xl sm:text-4xl md:text-6xl font-bold\">Coming soon</div>\n        <div className=\"mt-6 md:mt-10 flex flex-col text-sm sm:text-md md:text-lg\">\n          <div>\n            Airdrop rewards will be distributed on <span className=\"Ido__highlight\">August 8, 2021 20:00 GMT+0</span>\n            {/* <Countdown date={1628452800000} renderer={countdownRenderer} /> */}\n          </div>\n          {/* <div className=\"mt-1\">\n            Duration: <span className=\"Ido__highlight\">1 day</span> to claim\n            <Countdown date={1918983000000} renderer={countdown2Renderer} />\n          </div> */}\n        </div>\n        {/* <div className=\"mt-5 md:mt-8 flex flex-col md:flex-row\">\n          <div className=\"flex\">\n            {error instanceof UnsupportedChainIdError && (\n              <a\n                href=\"#\"\n                className=\"block rounded-full px-6 py-2 bg-gray-400 cursor-not-allowed\"\n                onClick={event => event?.preventDefault()}\n              >\n                Wrong network!\n              </a>\n            )}\n\n            {!(error instanceof UnsupportedChainIdError) && (\n              <>\n                {!account && (\n                  <a\n                    href=\"#\"\n                    className=\"block rounded-full px-6 py-2 bg-dino-pink\"\n                    onClick={() => setModalOpen(true)}\n                  >\n                    Connect wallet\n                  </a>\n                )}\n\n                <Modal open={modalOpen} setOpen={setModalOpen}>\n                  <div className=\"text-center\">\n                    <a\n                      href=\"#\"\n                      className=\"block rounded-full px-6 py-4 bg-dino-pink\"\n                      onClick={() => {\n                        activate(injected);\n                        setModalOpen(false);\n                      }}\n                    >\n                      MetaMask\n                    </a>\n                    <a\n                      href=\"#\"\n                      className=\"block mt-3 rounded-full px-6 py-4 bg-dino-pink\"\n                      onClick={() => {\n                        activate(walletconnect);\n                        setModalOpen(false);\n                      }}\n                    >\n                      WalletConnect\n                    </a>\n                  </div>\n                </Modal>\n\n                {account && (\n                  <>\n                    {claimed === true && (\n                      <a\n                        href=\"#\"\n                        className=\"block rounded-full px-6 py-2 bg-gray-400 cursor-not-allowed\"\n                        onClick={event => event?.preventDefault()}\n                      >\n                        Already claimed!\n                      </a>\n                    )}\n\n                    {claimed !== true && (\n                      <>\n                        {sig === null && (\n                          <a\n                            href=\"#\"\n                            className=\"block rounded-full px-6 py-2 bg-gray-400 cursor-not-allowed\"\n                            onClick={event => event?.preventDefault()}\n                          >\n                            Checking whitelist…\n                          </a>\n                        )}\n\n                        {sig === '' && (\n                          <a\n                            href=\"#\"\n                            className=\"block rounded-full px-6 py-2 bg-gray-400 cursor-not-allowed\"\n                            onClick={event => event?.preventDefault()}\n                          >\n                            Not whitelisted!\n                          </a>\n                        )}\n\n                        {sig !== null && sig !== '' && (\n                          <>\n                            {approving && (\n                              <a\n                                href=\"#\"\n                                className=\"block rounded-full px-6 py-2 bg-gray-400 cursor-not-allowed\"\n                                onClick={event => event?.preventDefault()}\n                              >\n                                Approving 250 BUSD…\n                              </a>\n                            )}\n\n                            {!approving && (\n                              <>\n                                {approved === null && (\n                                  <a\n                                    href=\"#\"\n                                    className=\"block rounded-full px-6 py-2 bg-gray-400 cursor-not-allowed\"\n                                    onClick={event => event?.preventDefault()}\n                                  >\n                                    Checking approval…\n                                  </a>\n                                )}\n\n                                {approved === false && (\n                                  <a\n                                    href=\"#\"\n                                    className=\"block rounded-full px-6 py-2 bg-dino-pink\"\n                                    onClick={async event => {\n                                      event?.preventDefault();\n                                      setApproving(true);\n\n                                      const busdContract = new ethers.Contract(BUSD_ADDRESS, busdAbi, getProviderOrSigner(provider!, account));\n\n                                      try {\n                                        const tx = await busdContract.approve(IDO_ADDRESS, IDO_BUSD_PAYMENT);\n                                        await tx.wait();\n                                        setApproved(true);\n                                      } catch (error) {\n                                        console.error(error);\n                                      }\n\n                                      setApproving(false);\n                                    }}\n                                  >\n                                    Approve 250 BUSD\n                                  </a>\n                                )}\n\n                                {approved === true && (\n                                  <>\n                                    {claiming && (\n                                      <a\n                                        href=\"#\"\n                                        className=\"block rounded-full px-6 py-2 bg-gray-400 cursor-not-allowed\"\n                                        onClick={event => event?.preventDefault()}\n                                      >\n                                        Paying…\n                                      </a>\n                                    )}\n\n                                    {!claiming && (\n                                      <>\n                                        {claimed === null && (\n                                          <a\n                                            href=\"#\"\n                                            className=\"block rounded-full px-6 py-2 bg-gray-400 cursor-not-allowed\"\n                                            onClick={event => event?.preventDefault()}\n                                          >\n                                            Checking participation…\n                                          </a>\n                                        )}\n\n                                        {claimed === false && (\n                                          <a\n                                            href=\"#\"\n                                            className=\"block rounded-full px-6 py-2 bg-dino-pink\"\n                                            onClick={async event => {\n                                              event?.preventDefault();\n                                              setClaiming(true);\n\n                                              const idoContract = new ethers.Contract(IDO_ADDRESS, idoAbi, getProviderOrSigner(provider!, account));\n\n                                              try {\n                                                const tx = await idoContract.participate(sig);\n                                                await tx.wait();\n                                                setClaimed(true);\n                                              } catch (error) {\n                                                console.error(error);\n                                              }\n\n                                              setClaiming(false);\n                                            }}\n                                          >\n                                            Pay 250 BUSD for 1000 DINO\n                                          </a>\n                                        )}\n                                      </>\n                                    )}\n                                  </>\n                                )}\n                              </>\n                            )}\n                          </>\n                        )}\n                      </>\n                    )}\n                  </>\n                )}\n              </>\n            )}\n          </div>\n        </div> */}\n      </div>\n      <div className=\"Ido__image mt-8 ml-0 md:ml-10 w-44 sm:w-60 md:w-full h-36 sm:h-52 md:h-full flex\"></div>\n    </div>\n  );\n};\n","import { useWeb3React } from '@web3-react/core';\nimport { useEffect, useState } from 'react';\nimport { isMobile } from 'react-device-detect';\n\nimport { injected } from './connectors';\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3React();\n  const [tried, setTried] = useState(false)\n\n  useEffect(() => {\n    injected.isAuthorized().then(isAuthorized => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true);\n        });\n      } else {\n        if (isMobile && (window as any).ethereum) {\n          activate(injected, undefined, true).catch(() => {\n            setTried(true);\n          })\n        } else {\n          setTried(true);\n        }\n      }\n    })\n  }, [activate]);\n\n  useEffect(() => {\n    if (active) {\n      setTried(true);\n    }\n  }, [active]);\n\n  return tried;\n}\n\nexport function useInactiveListener(suppress = false) {\n  const { active, error, activate } = useWeb3React()\n\n  useEffect(() => {\n    const { ethereum } = window as any;\n\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleChainChanged = () => {\n        activate(injected, undefined, true).catch(error => {\n          console.error('Failed to activate after chain changed', error);\n        });\n      };\n\n      const handleAccountsChanged = (accounts: string[]) => {\n        if (accounts.length > 0) {\n          activate(injected, undefined, true).catch(error => {\n            console.error('Failed to activate after accounts changed', error);\n          });\n        }\n      };\n\n      ethereum.on('chainChanged', handleChainChanged);\n      ethereum.on('accountsChanged', handleAccountsChanged);\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('chainChanged', handleChainChanged);\n          ethereum.removeListener('accountsChanged', handleAccountsChanged);\n        }\n      }\n    }\n  }, [active, error, suppress, activate]);\n}\n","import { Web3Provider } from '@ethersproject/providers'\n\nimport { Web3ReactProvider } from '@web3-react/core'\nimport React from 'react';\n\nimport Header from './components/header/Header';\nimport Ido from './pages/ido/Ido';\n\n\nconst getLibrary = (provider: any) => {\n  const library = new Web3Provider(provider);\n  library.pollingInterval = 12000;\n  return library;\n}\n\nconst App = () => (\n  <Web3ReactProvider getLibrary={getLibrary}>\n    <Header />\n    <Ido />\n  </Web3ReactProvider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/global.css';\nimport './styles/custom.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}